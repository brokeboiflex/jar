{"version":3,"file":"index.cjs","sources":["../src/router.tsx"],"sourcesContent":["import { JSX } from \"preact/jsx-runtime\";\r\nimport { createJSONStorage, persist, StateStorage } from \"zustand/middleware\";\r\nimport { create } from \"zustand\";\r\nimport { ComponentChildren, isValidElement } from \"preact\";\r\nexport interface RouterProps {\r\n  children: ComponentChildren;\r\n  routerStore: () => RouterState;\r\n}\r\nexport interface RouteProps {\r\n  path: string;\r\n  component: JSX.Element;\r\n}\r\n\r\nexport interface RouterState {\r\n  location: string;\r\n  navigate: (route: string) => void;\r\n}\r\n\r\nexport interface LinkProps {\r\n  to: string;\r\n  children: ComponentChildren;\r\n}\r\n\r\nexport function createLink(routerStore: () => RouterState) {\r\n  return function Link({ to, children }: LinkProps) {\r\n    const { navigate } = routerStore();\r\n    return (\r\n      <a\r\n        href=\"\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          navigate(to);\r\n        }}\r\n      >\r\n        {children}\r\n      </a>\r\n    );\r\n  };\r\n}\r\nexport function createRouterStore(storage: StateStorage): () => RouterState {\r\n  // @ts-ignore\r\n  return create(\r\n    persist(\r\n      (set) => ({\r\n        location: \"/\", // Default route\r\n        navigate: (route: string) => set({ location: route }),\r\n      }),\r\n      {\r\n        name: \"router-storage\", // Name of the item in chrome.storage.local\r\n        storage: createJSONStorage(() => storage),\r\n      }\r\n    )\r\n  );\r\n}\r\nexport function Router({ children, routerStore }: RouterProps) {\r\n  const { location } = routerStore();\r\n  console.log(location);\r\n\r\n  // Filter children to get Route components\r\n  const routes = Array.isArray(children) ? children : [children];\r\n  const routeElements = routes.filter(\r\n    (child) => isValidElement(child) && (child as any).type === Route\r\n  );\r\n\r\n  // Find the component that matches the current route\r\n  const currentRoute = routeElements.find((route) => {\r\n    const routeProps = (route as any).props as RouteProps;\r\n    return routeProps.path === location;\r\n  });\r\n\r\n  return currentRoute ? (currentRoute as any).props.component : null;\r\n}\r\n\r\n// Route component\r\n// @ts-ignore\r\nexport function Route({ path, component }: RouteProps) {\r\n  return null;\r\n}\r\n"],"names":["Route","_ref3","_ref2","children","location","routerStore","console","log","currentRoute","Array","isArray","filter","child","isValidElement","type","find","route","props","path","component","_ref","to","navigate","_jsx","jsx","href","onClick","e","preventDefault","storage","create","persist","set","name","createJSONStorage"],"mappings":"sHA2EgBA,EAAKC,GACnB,OACF,IAAA,gCAvBgB,SAAMC,GAAuC,IAApCC,EAAQD,EAARC,SACfC,GAAaC,EADuBH,EAAXG,eACzBD,SACRE,QAAQC,IAAIH,GAGZ,IAMMI,GANSC,MAAMC,QAAQP,GAAYA,EAAW,CAACA,IACxBQ,OAC3B,SAACC,GAAU,OAAAC,EAAcA,eAACD,IAAWA,EAAcE,OAASd,CAAK,GAIhCe,KAAK,SAACC,GAEvC,OADoBA,EAAcC,MAChBC,OAASd,CAC7B,GAEA,OAAOI,EAAgBA,EAAqBS,MAAME,UAAY,IAChE,qBAhDM,SAAqBd,GACzB,gBAAoBe,GAA4B,IAAzBC,EAAED,EAAFC,GAAIlB,EAAQiB,EAARjB,SACjBmB,EAAajB,IAAbiB,SACR,OACEC,EACEC,IAAA,IAAA,CAAAC,KAAK,GACLC,QAAS,SAACC,GACRA,EAAEC,iBACFN,EAASD,EACX,EAEClB,SAAAA,GAGP,CACF,4BACgB,SAAkB0B,GAEhC,OAAOC,EAAAA,OACLC,EAAAA,QACE,SAACC,GAAG,MAAM,CACR5B,SAAU,IACVkB,SAAU,SAACN,UAAkBgB,EAAI,CAAE5B,SAAUY,GAAQ,EACtD,EACD,CACEiB,KAAM,iBACNJ,QAASK,EAAiBA,kBAAC,WAAM,OAAAL,CAAO,KAIhD"}